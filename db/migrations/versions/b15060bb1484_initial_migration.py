"""initial_migration

Revision ID: b15060bb1484
Revises: 
Create Date: 2022-04-29 01:05:29.501145

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b15060bb1484"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "coin_type",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("type", sa.VARCHAR(length=20), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("type"),
    )
    op.create_table(
        "notification_status",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("status", sa.VARCHAR(length=40), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("status"),
    )
    op.create_table(
        "user",
        sa.Column("id", postgresql.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted", sa.TIMESTAMP(), nullable=True),
        sa.Column("public_key", sa.CHAR(length=40), nullable=False),
        sa.Column("user_name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("email", sa.VARCHAR(length=255), nullable=True),
        sa.Column("phone", sa.VARCHAR(length=12), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_public_key"), "user", ["public_key"], unique=True)
    op.create_index(op.f("ix_user_user_name"), "user", ["user_name"], unique=True)
    op.create_table(
        "coin",
        sa.Column("symbol", sa.VARCHAR(length=30), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("chain_name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=True),
        sa.Column("enabled", sa.Boolean(), server_default="1", nullable=True),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["coin_type.id"],
        ),
        sa.PrimaryKeyConstraint("symbol"),
        sa.UniqueConstraint("chain_name"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_coin_symbol"), "coin", ["symbol"], unique=True)
    op.create_table(
        "alert",
        sa.Column("id", postgresql.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted", sa.TIMESTAMP(), nullable=True),
        sa.Column("user_id", postgresql.UUID(), nullable=False),
        sa.Column("strike_price", sa.Numeric(precision=28, scale=18), nullable=False),
        sa.Column("coin_symbol", sa.Integer(), nullable=False),
        sa.Column("send_email", sa.Boolean(), server_default="0", nullable=True),
        sa.Column("send_sms", sa.Boolean(), server_default="0", nullable=True),
        sa.Column("priority", sa.Integer(), server_default="1", nullable=True),
        sa.Column("repeat", sa.Boolean(), server_default="0", nullable=True),
        sa.CheckConstraint("priority BETWEEN 1 AND 3"),
        sa.ForeignKeyConstraint(
            ["coin_symbol"],
            ["coin.symbol"],
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "alert_notification",
        sa.Column("id", postgresql.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted", sa.TIMESTAMP(), nullable=True),
        sa.Column("alert_id", postgresql.UUID(), nullable=False),
        sa.Column("status_id", sa.Integer(), server_default="1", nullable=False),
        sa.ForeignKeyConstraint(
            ["alert_id"],
            ["alert.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["notification_status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("alert_notification")
    op.drop_table("alert")
    op.drop_index(op.f("ix_coin_symbol"), table_name="coin")
    op.drop_table("coin")
    op.drop_index(op.f("ix_user_user_name"), table_name="user")
    op.drop_index(op.f("ix_user_public_key"), table_name="user")
    op.drop_table("user")
    op.drop_table("notification_status")
    op.drop_table("coin_type")
    # ### end Alembic commands ###
